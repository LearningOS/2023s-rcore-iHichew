var searchIndex = JSON.parse('{\
"os":{"doc":"The main module and entrypoint","t":[5,0,0,0,5,0,0,0,14,14,5,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,3,11,11,11,11,5,11,11,11,11,7,7,5,5,5,7,3,7,3,11,11,11,11,11,11,11,11,12,12,11,11,5,5,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,11,11,11,11,11,17,17,17,5,5,5,5,3,12,0,3,11,11,11,11,12,11,11,11,11,11,17,17,17,17,17,0,0,5,17,5,3,3,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,12,12,11,11,11,11,11,11,12,13,13,13,3,3,3,3,3,4,13,12,11,11,11,11,11,11,0,12,11,5,11,11,11,11,12,11,11,11,5,11,5,11,12,12,5,11,5,11,12,12,5,0,0,12,12,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,5,13,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,17,17,17,5,5,5,5,3,0,5,5,12,12,5,12,3,11,11,11,11,11,11,12,11,12,11,11,11,12],"n":["clear_bss","config","console","heap_alloc","kernel_log_info","lang_items","loader","logging","print","println","rust_main","sbi","sync","syscall","task","timer","trap","APP_BASE_ADDRESS","APP_SIZE_LIMIT","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MAX_APP_NUM","MAX_SYSCALL_NUM","MEMORY_END","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","init_heap","panic","KERNEL_STACK","KernelStack","USER_STACK","UserStack","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","from","from","get_base_i","get_num_app","get_sp","get_sp","init_app_cx","into","into","load_apps","push_context","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","SBI_CONSOLE_PUTCHAR","SBI_SET_TIMER","SBI_SHUTDOWN","console_putchar","sbi_call","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_TASK_INFO","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDOUT","sys_write","TaskInfo","TimeVal","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","sec","status","sys_exit","sys_get_time","sys_task_info","sys_yield","syscall_times","time","try_from","try_from","try_into","try_into","type_id","type_id","usec","Exited","Ready","Running","TASK_MANAGER","TaskContext","TaskControlBlock","TaskManager","TaskManagerInner","TaskStatus","UnInit","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context","current_task","deref","exit_current_and_run_next","find_next_task","from","from","from","inner","into","into","into","mark_current_exited","mark_current_exited","mark_current_suspended","mark_current_suspended","num_app","ra","run_first_task","run_first_task","run_next_task","run_next_task","s","sp","suspend_current_and_run_next","switch","task","task_cx","task_status","tasks","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","TaskContext","borrow","borrow_mut","clone","clone_into","from","goto_restore","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","__switch","Exited","Ready","Running","TaskControlBlock","TaskStatus","UnInit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","from","from","into","into","task_cx","task_status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","MICRO_PER_SEC","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","get_time_us","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","sepc","sstatus","trap_handler","x","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","sepc","set_sp","sstatus","try_from","try_into","type_id","x"],"q":["os","","","","","","","","","","","","","","","","","os::config","","","","","","","","","os::console","","","","","","","","","","os::heap_alloc","","","","os::lang_items","os::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::logging","","","","","","","","","","","","os::sbi","","","","","","","os::sync","","","os::sync::up","","","","","","","","","","","os::syscall","","","","","","","","os::syscall::fs","","os::syscall::process","","","","","","","","","","","","","","","","","","","","","","","","","","os::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::task::context","","","","","","","","","","","","","","","","os::task::switch","os::task::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::timer","","","","","","","os::trap","","","","","","","","os::trap::context","","","","","","","","","","","","",""],"d":["clear BSS segment","Constants in the kernel","SBI console driver, for text output","The global allocator","kernel log info","The panic handler","Loading user applications into memory","Global logger","Print! to the host console using the format string and …","Println! to the host console using the format string and …","the rust entry-point of os","SBI call wrappers","Synchronization and interior mutability primitives","Implementation of syscalls","Task management implementation","RISC-V timer-related functionality","Trap handling functionality","base_addr(changed) of app","size limit of app","clock frequency","kernel heap size","kernel stack size","the max number of apps","the max number of syscall","the physical memory end","user app’s stack size","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","heap allocator instance","heap space ([u8; KERNEL_HEAP_SIZE])","panic when heap allocation error occurs","initiate heap allocator","panic handler","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get base address of app i.","Get the total number of applications.","","","get app info with entry and sp and save <code>TrapContext</code> in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load nth user app at [APP_BASE_ADDRESS + n * …","","","","","","","","","","a simple logger","","","","","Returns the argument unchanged.","initiate logger","Calls <code>U::from(self)</code>.","","","","","","","","use sbi call to putchar in console (qemu uart handler)","general sbi call","use sbi call to set timer","use sbi call to shutdown the kernel","Wrap a static data structure inside it so that we are able …","inner data","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Panic if the data has been borrowed.","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","exit syscall","gettime syscall","taskinfo syscall","write syscall","yield syscall","File and filesystem-related syscalls","Process management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","write buf of length <code>len</code>  to a file with <code>fd</code>","Task information","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Task status in it’s life cycle","task exits and submit an exit code","get time with second and microsecond","YOUR JOB: Finish sys_task_info to pass testcases","current task gives up resources for other tasks","The numbers of syscall called by task","Total running time of task","","","","","","","","exited","ready to run","running","Global variable: TASK_MANAGER","task context structure containing some registers","The task control block (TCB) of a task.","The task manager, where all the tasks are managed.","Inner of Task Manager","The status of a task","uninitialized","","","","","","","","Implementation of <code>TaskContext</code>","id of current <code>Running</code> task","","Exit the current ‘Running’ task and run the next task …","Find next task to run and return task id.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","use inner value to get mutable access","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Change the status of current <code>Running</code> task into <code>Exited</code>.","Change the status of current <code>Running</code> task into <code>Exited</code>.","Change the status of current <code>Running</code> task into <code>Ready</code>.","Change the status of current <code>Running</code> task into <code>Ready</code>.","total number of tasks","Ret position after task switching","Run the first task in task list.","Run the first task in task list.","Switch current <code>Running</code> task to the task we have found, or …","Switch current <code>Running</code> task to the task we have found, or …","s0-11 register, callee saved","Stack pointer","Suspend the current ‘Running’ task and run the next …","Rust wrapper around <code>__switch</code>.","Types related to task management","The task context","The task status in it’s lifecycle","task list","","","","","","","","","","task context structure containing some registers","","","","","Returns the argument unchanged.","Create a new task context with a trap return addr and a …","Calls <code>U::from(self)</code>.","Ret position after task switching","s0-11 register, callee saved","Stack pointer","","","","","Create a new empty task context","Switch to the context of <code>next_task_cx_ptr</code>, saving the …","exited","ready to run","running","The task control block (TCB) of a task.","The status of a task","uninitialized","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The task context","The task status in it’s lifecycle","","","","","","","","","The number of microseconds per second","The number of milliseconds per second","The number of ticks per second","Get the current time in ticks","get current time in milliseconds","get current time in microseconds","Set the next timer interrupt","trap context structure containing sstatus, sepc and …","","enable timer interrupt in supervisor mode","Initialize trap handling","Supervisor Exception Program Counter","Supervisor Status Register","trap handler","General-Purpose Register x0-31","trap context structure containing sstatus, sepc and …","init the trap context of an application","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Supervisor Exception Program Counter","put the sp(stack pointer) into x[2] field of TrapContext","Supervisor Status Register","","","","General-Purpose Register x0-31"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,5,5,5,5,0,0,0,0,0,0,0,0,0,10,11,10,11,10,11,10,11,10,11,10,11,0,0,10,11,0,10,11,0,10,10,11,10,11,10,11,10,11,0,14,14,14,14,14,0,14,14,14,14,14,0,0,0,0,0,0,0,0,18,0,0,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,25,22,25,22,22,25,22,25,22,22,25,0,0,0,0,25,25,25,22,25,22,25,22,22,31,31,31,0,0,0,0,0,0,31,26,27,32,26,27,32,26,0,32,26,0,27,27,32,26,27,27,32,26,0,27,0,27,27,29,0,27,0,27,29,29,0,0,0,30,30,32,27,32,26,27,32,26,27,32,26,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,31,31,31,0,0,31,30,31,30,31,30,31,30,31,31,30,31,30,31,30,30,30,31,30,31,30,31,30,31,0,0,0,0,0,0,0,0,0,0,0,13,13,0,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[[[]],0,0,0,[[]],0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[2],[[],3],[[],3],[[],4],[[5,6],7],0,0,[8,1],[[]],[9,1],0,0,0,0,[[]],[[]],[[]],[[]],[10,10],[11,11],[[]],[[]],0,0,[[]],[[]],[12,12],[[],12],[10,12],[11,12],[12,12],[[]],[[]],[[]],[[10,13],12],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,[[]],[[]],[[14,15],16],[14],[[]],[[]],[[]],[[14,17]],[[],3],[[],3],[[],4],0,0,0,[12],[[12,12,12,12],12],[12],[[],1],0,0,0,0,[[]],[[]],[18,19],[[]],0,[[]],[[],18],[[],3],[[],3],[[],4],0,0,0,0,0,0,0,[12,20],0,[[12,21,12],20],0,0,[[]],[[]],[[]],[[]],[[22,23],7],[[]],[[]],[[]],[[]],0,0,[24,1],[[22,12],20],[25,20],[[],20],0,0,[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[26,27],[[]],[27,[[28,[12]]]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[27],[[]],[27],0,0,[[]],[27,1],[[]],[27],0,0,[[]],0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],0,[[]],[[]],[29,29],[[]],[[]],[12,29],[[]],0,0,0,[[]],[[],3],[[],3],[[],4],[[],29],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[30,30],[31,31],[[]],[[]],[[31,31],16],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],0,0,0,[[],12],[[],12],[[],12],[[]],0,0,[[]],[[]],0,0,[13,13],0,0,[[12,12],13],[[]],[[]],[[13,23],7],[[]],[[]],0,[[13,12]],0,[[],3],[[],3],[[],4],0],"p":[[15,"never"],[3,"Arguments"],[4,"Result"],[3,"TypeId"],[3,"Stdout"],[15,"str"],[6,"Result"],[3,"Layout"],[3,"PanicInfo"],[3,"KernelStack"],[3,"UserStack"],[15,"usize"],[3,"TrapContext"],[3,"SimpleLogger"],[3,"Metadata"],[15,"bool"],[3,"Record"],[3,"UPSafeCell"],[3,"RefMut"],[15,"isize"],[15,"u8"],[3,"TimeVal"],[3,"Formatter"],[15,"i32"],[3,"TaskInfo"],[3,"TASK_MANAGER"],[3,"TaskManager"],[4,"Option"],[3,"TaskContext"],[3,"TaskControlBlock"],[4,"TaskStatus"],[3,"TaskManagerInner"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
