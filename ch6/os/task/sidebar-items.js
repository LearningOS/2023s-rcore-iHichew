window.SIDEBAR_ITEMS = {"constant":[["IDLE_PID","pid of usertests app in make run TEST=1"]],"enum":[["TaskStatus","task status: UnInit, Ready, Running, Exited"]],"fn":[["add_initproc","Add init process to the manager"],["add_task","Add process to ready queue"],["current_task","Get a copy of the current task"],["current_trap_cx","Get the mutable reference to trap context of current task"],["current_user_token","Get the current user token(addr of page table)"],["exit_current_and_run_next","Exit the current ‘Running’ task and run the next task in task list."],["fetch_task","Take a process out of the ready queue"],["kstack_alloc","allocate a new kernel stack"],["pid_alloc","Allocate a new PID"],["run_tasks","The main part of process execution and scheduling Loop `fetch_task` to get the process that needs to run, and switch the process through `__switch`"],["schedule","Return to idle control flow for new scheduling"],["suspend_current_and_run_next","Suspend the current ‘Running’ task and run the next task in task list."],["take_current_task","Get current task through take, leaving a None in its place"]],"mod":[["context","Implementation of [`TaskContext`]"],["id","Task pid implementation."],["manager","Implementation of [`TaskManager`]"],["processor","Implementation of [`Processor`] and Intersection of control flow"],["switch","Wrap `switch.S` as a function"],["task","Types related to task management & Functions for completely changing TCB"]],"struct":[["INITPROC","Creation of initial process"],["KernelStack","Kernel stack for a process(task)"],["PidHandle","Abstract structure of PID"],["Processor","Processor management structure"],["TaskContext","task context structure containing some registers"],["TaskControlBlock","Task control block structure"],["TaskManager","A array of `TaskControlBlock` that is thread-safe"]]};